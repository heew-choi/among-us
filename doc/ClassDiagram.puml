@startuml
'https://plantuml.com/class-diagram

skinparam classAttributeIconSize 0

' PlantUML Parser 자동 생성
class employee.BirthDay {
- String year
- String month
- String day
+ String getYear()
+ void setYear(String)
+ String getMonth()
+ void setMonth(String)
+ String getDay()
+ void setDay(String)
+ String toString()
+ boolean isValid()
+ boolean isValidString(String)
}
class option.compare.BirthdayYearCompareOption {
+ boolean compare(Employee)
}
class option.compare.FirstNameCompareOption {
+ boolean compare(Employee)
}
class employee.CertificationLevel {
- String certi
+ String getCerti()
+ void setCerti(String)
+ String toString()
+ boolean isValid()
+ boolean isValidString(String)
}
class option.compare.CareerLevelCompareOption {
+ boolean compare(Employee)
}
class database.Database {
- List<Employee> employees
+ List<Employee> select()
+ List<Employee> select(CompareOption)
+ void delete(Employee)
+ void insert(Employee)
+ void update(Employee,Employee)
- boolean isDuplicateEmployeeNumber(EmployeeNumber)
- int getInsertPosition(Employee)
}
class command.SearchCommand {
- List<Employee> testResult
+ String getCommandType()
+ void run()
+ List<Employee> getTestResult()
}
class AmongUs {
- {static} String DEFAULT_INPUT_FILE_PATH
- {static} String DEFAULT_OUTPUT_FILE_PATH
- {static} String inputFileName
- {static} String outputFileName
+ {static} void main(String[])
- {static} void setupFiles(String[])
}
class option.compare.DefaultCompareOption {
+ boolean compare(Employee)
}
class employee.PhoneNumber {
- String middleNumber
- String lastNumber
+ String getMiddleNumber()
+ void setMiddleNumber(String)
+ String getLastNumber()
+ void setLastNumber(String)
+ String toString()
+ boolean isValid()
+ boolean isValidString(String)
}
class command.AddCommand {
+ String getCommandType()
+ void run()
+ Employee makeNewbie(List<String>)
}
class commandParser.CommandParser {
- {static} int MIN_SPLIT_CNT
- String delimiter
- CommandTypeChecker commandTypeChecker
- List<OptionValidChecker> optionCheckerList
- CommandFactory commandFactory
+ Command parseCommand(String)
- boolean isValidCommandLine(String)
- boolean checkArgsValidation(String,List<String>,List<String>)
- Command getCommand(String,List<String>,List<String>)
- Option getCommandOption(List<String>,List<String>)
- IPrintOption getPritnOption(String)
- CompareOption getCompareOption(String,List<String>)
}
class option.compare.BirthdayMonthCompareOption {
+ boolean compare(Employee)
}
abstract class option.compare.CompareOption {
# String query
+ {abstract}boolean compare(Employee)
}
class option.compare.CertificationCompareOption {
+ boolean compare(Employee)
}
class commandParser.commandValidChecker.PrintOptionChecker {
+ boolean isValid(String,List<String>)
# String getErrorMessage()
}
class exceptions.ImproperlyConfigured {
}
class option.compare.EmployeeNumberCompareOption {
+ boolean compare(Employee)
}
class command.CommandFactory {
- Database database
+ Command getCommand(String)
}
abstract class commandParser.commandValidChecker.OptionValidChecker {
+ void check(String,List<String>)
# {abstract}boolean isValid(String,List<String>)
# {abstract}String getErrorMessage()
}
class option.compare.LastPhoneNumberCompareOption {
+ boolean compare(Employee)
}
class EmployeeManager {
- CommandParser commandParser
+ void runCommand(String)
}
class commandParser.commandValidChecker.Option3Checker {
+ boolean isValid(String,List<String>)
# String getErrorMessage()
}
class employee.Name {
- String firstName
- String lastName
+ String getFirstName()
+ void setFirstName(String)
+ String getLastName()
+ void setLastName(String)
+ String toString()
+ boolean isValid()
+ boolean isValidString(String)
}
class option.compare.BirthdayCompareOption {
+ boolean compare(Employee)
}
class option.compare.LastNameCompareOption {
+ boolean compare(Employee)
}
class option.Option {
- IPrintOption printOption
- CompareOption compareOption
+ IPrintOption getPrintOption()
+ CompareOption getCompareOption()
}
interface option.print.IPrintOption {
~ String report(List<Employee>,String)
}
class option.print.CountPrintOption {
+ String report(List<Employee>,String)
}
class employee.Employee {
- int id
- EmployeeNumber employeeNum
- Name name
- CareerLevel cl
- PhoneNumber phoneNum
- BirthDay birthday
- CertificationLevel certi
+ boolean isValid()
+ String toString()
+ String getFullEmployeeNumber()
+ int getId()
+ void setId(int)
+ EmployeeNumber getEmployeeNum()
+ void setEmployeeNum(EmployeeNumber)
+ Name getName()
+ void setName(Name)
+ CareerLevel getCl()
+ void setCl(CareerLevel)
+ PhoneNumber getPhoneNum()
+ void setPhoneNum(PhoneNumber)
+ BirthDay getBirthday()
+ void setBirthday(BirthDay)
+ CertificationLevel getCerti()
+ void setCerti(CertificationLevel)
}
class utility.Logger {
- {static} File file
- {static} String DEFAULT_OUTPUT_FILE_PATH
- {static} String outputFilePath
- {static} ArrayList<String> printBuffer
+ {static} void setOutputFilePath(String)
+ {static} void logConsole(String)
+ {static} void appendLog(String)
+ {static} void flushLogToFile()
+ {static} void flushLogToConsole()
+ {static} void logFile(String)
- {static} boolean getOrCreateFile()
}
class option.print.ListPrintOption {
~ {static} int PRINT_LIMIT
+ String report(List<Employee>,String)
}
class option.compare.MiddlePhoneNumberCompareOption {
+ boolean compare(Employee)
}
class employee.EmployeeNumber {
- String fullNumber
- String shortNumber
+ String getFullNumber()
+ void setFullNumber()
+ String getShortNumber()
+ void setShortNumber(String)
+ String toString()
+ boolean isValid()
+ boolean isValidString(String)
}
class employee.CareerLevel {
- String cl
+ String getCl()
+ void setCl(String)
+ String toString()
+ boolean isValid()
+ boolean isValidString(String)
}
abstract class command.Command {
# int paramCount
# Database database
# Option option
# List<String> params
# void print(List<Employee>)
# boolean isParamCountValid()
+ Database getDatabase()
+ Option getOption()
+ void setOption(Option)
+ List<String> getParams()
+ void setParams(List<String>)
+ {abstract}String getCommandType()
+ {abstract}void run()
}
class commandParser.commandValidChecker.CompareOptionChecker {
- Map<String,List<String>> columnOptionMap
+ boolean isValid(String,List<String>)
# String getErrorMessage()
}
class command.ModifyCommand {
+ String getCommandType()
+ void run()
- Employee getUpdatedEmployee(Employee,String,String)
}
class option.compare.NameCompareOption {
+ boolean compare(Employee)
}
class command.DeleteCommand {
+ String getCommandType()
+ void run()
}
abstract class employee.EmployeeField {
+ String toString()
+ boolean isValid()
+ boolean isValidString(String)
}
class option.compare.BirthdayDayCompareOption {
+ boolean compare(Employee)
}
class commandParser.commandValidChecker.CommandTypeChecker {
- List<String> commandList
+ void check(String)
+ boolean isValid(String)
}
class option.compare.PhoneNumberCompareOption {
+ boolean compare(Employee)
}


employee.EmployeeField <|-- employee.BirthDay
option.compare.CompareOption <|-- option.compare.BirthdayYearCompareOption
option.compare.CompareOption <|-- option.compare.FirstNameCompareOption
employee.EmployeeField <|-- employee.CertificationLevel
option.compare.CompareOption <|-- option.compare.CareerLevelCompareOption
command.Command <|-- command.SearchCommand
option.compare.CompareOption <|-- option.compare.DefaultCompareOption
employee.EmployeeField <|-- employee.PhoneNumber
command.Command <|-- command.AddCommand
option.compare.CompareOption <|-- option.compare.BirthdayMonthCompareOption
option.compare.CompareOption <|-- option.compare.CertificationCompareOption
commandParser.commandValidChecker.OptionValidChecker <|-- commandParser.commandValidChecker.PrintOptionChecker
exceptions.Exception <|-- exceptions.ImproperlyConfigured
option.compare.CompareOption <|-- option.compare.EmployeeNumberCompareOption
option.compare.CompareOption <|-- option.compare.LastPhoneNumberCompareOption
commandParser.commandValidChecker.OptionValidChecker <|-- commandParser.commandValidChecker.Option3Checker
employee.EmployeeField <|-- employee.Name
option.compare.CompareOption <|-- option.compare.BirthdayCompareOption
option.compare.CompareOption <|-- option.compare.LastNameCompareOption
option.print.IPrintOption <|.. option.print.CountPrintOption
option.print.IPrintOption <|.. option.print.ListPrintOption
option.compare.CompareOption <|-- option.compare.MiddlePhoneNumberCompareOption
employee.EmployeeField <|-- employee.EmployeeNumber
employee.EmployeeField <|-- employee.CareerLevel
commandParser.commandValidChecker.OptionValidChecker <|-- commandParser.commandValidChecker.CompareOptionChecker
command.Command <|-- command.ModifyCommand
option.compare.CompareOption <|-- option.compare.NameCompareOption
command.Command <|-- command.DeleteCommand
option.compare.CompareOption <|-- option.compare.BirthdayDayCompareOption
option.compare.CompareOption <|-- option.compare.PhoneNumberCompareOption


' Manual 작성
AmongUs ..> EmployeeManager
EmployeeManager --> commandParser.CommandParser
commandParser.CommandParser --> commandParser.commandValidChecker.CommandTypeChecker
commandParser.CommandParser --> commandParser.commandValidChecker.OptionValidChecker
commandParser.CommandParser --> command.CommandFactory
command.CommandFactory ..> command.Command: <<create>>

command.Command *-- database.Database
command.Command *-- option.Option

database.Database *-- employee.Employee
employee.Employee *-- employee.EmployeeField

AmongUs .> utility.Logger
command.Command .up.> utility.Logger

option.Option *-- option.print.IPrintOption
option.Option *-- option.compare.CompareOption

' Hide Option
hide members
'hide fields
'hide methods

'hide circle
'hide stereotype

@enduml
